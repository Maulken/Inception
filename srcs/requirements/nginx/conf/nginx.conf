user nginx; #Specifie l'utilisateur et le groupe  avec lesquels les
			# work_process s'executent
worker_processes auto; # adapte le nombre de workers au CPU
pid /run/nginx.pid; # Fichier PID pour Nginx
include /etc/nginx/modules-enabled/*.conf;

# Obligatoire car il fait partie de la structure minimale
# attendu par NGINX en revanche il n'est pas souvent modifie
# Il contient des directives qui influent les connexions reseau
# simultanees: 
#	- nombre maximum de connexions de chaque processus worker
#	- gestion evenement reseau
events {
	worker_connections 1024; # Nombre de connection par worker
}

# Coeur des gestions HTTP/HTTPS
http {
	#Configuration globale
	include mime.types; #Chargement des types MIME
	default_type application/octet-stream; #Type par defaut si non precises
		# MIME = Multipurpose Internet Mail Extensions : norme utilisee sur internet
		# pour decrire le type de contenu d'un fichier ou d'une donnee. Aide le nav.
		# web, serveur ou app de savoir comment manipuler, affiche ou traiter un fichier
			# Si Nginx ne connaît pas le type MIME d’un fichier, il peut utiliser 
			# une valeur par défaut:
			# application/octet-stream = fichier binaire inconnu

	access_log /var/log/nginx/access.log; #Chemin du fichier de log
	error_log /var/log/nginx/error.log; #Chemin des logs d'erreur

	#Plusieurs bloc server possible (par exemple : un HTTP et un HTTPS) 
	server {

		#Definit un site web HTTPS
		listen					443 ssl; #On ecoute sur le port 443 en activant SSL / IPv4
		listen 					[::]:443 ssl; #IPv6
		server_name				vmassoli.42.fr; #Nom du site

		ssl_certificate			/etc/ssl/certs/cert.crt; #Chemin du certificat
		ssl_certificate_key		/etc/ssl/private/cert.key; #Chemin de la cle
		ssl_protocols 			TLSv1.2 TLSv1.3; #Version des protocles

		root					/var/www/html; #Repertoire ou se trouve les fichiers du site
		index					index.php; #Page d'acceuil par defaut

		# "location" definit une regle pour des chemins specifique
			#Pour les requetes PHP grace a l'expression reguliere (~)
		location ~ \.php$ {
			include fastcgi.conf; # Inclue les paramètres nécessaires pour configurer 
							# et transmettre les requêtes PHP à FastCGI.
			fastcgi_pass wordpress.inception:9000; # Indique ou envoyer la requete PHP pour traitement
							# ici conteneur wordpress sur le port 9000 ou le service PHP_FPM
							# (FastCGI Process Manager) ecoute
		}
			#Pour les requetes autres
		location / {
			try_files $uri $uri/ =404;
			# Verifier si le fichier existe sur le systeme avant de decider comment le traiter
			# Elle prend plusieurs arguments en les essayant dans l'ordre jusqu'a trouver un valide
				# $uri = URI de la requete = verifie si un fichier existe avec ce nom
				# $uri/ = URI suivi d'un '/' = verifie si un repetoire au nom de l'URI existe
					# Si http://example.com/blog est une requete, la commande va chercher /blog
					# puis /blog/ si necessaire sinon elle reverra une erreur 404
		}
	}
}

#Pour verifier la syntaxe : ```nginx -t```
